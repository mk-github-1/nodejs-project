back-end(Nest.js + TypeORM + mysql環境)の準備方法

■ グローバルにtypeormをインストール
npm install -g typeorm

■ フォルダに移動
cd vscode-workspace/nodejs-project

■ back-endプロジェクトの自動生成
これをすることでtypeorm + express.js + mysqlのプロジェクトを自動生成できる
npx typeorm init --name back-end --database mysql --express

■ 依存関係のmysqlを修正する
依存関係のmysqlはmysql Version8に対応していないのでそのままでは動作しない、mysql2に変更が必要

cd back-end
①npm uninstall mysql
②npm install mysql2

■ src/database.config.tsの設定を変更する
import { TypeOrmModuleOptions } from '@nestjs/typeorm';

export const databaseConfig: TypeOrmModuleOptions = {
  type: 'mysql',
  host: 'localhost',
  port: 3306,
  username: 'root',
  password: '0000',
  database: 'test_db',
  synchronize: false, // 開発時 true or 本番時 false
  logging: false,
  // entities: [User],
  entities: ['src/domain-model/entity/*.ts', 'src/domain-model/entity/**/*.ts'],
  migrations: ['src/migrations/*.ts'],
  subscribers: [],
};


■ TypeORM用のpackage.jsonのscript設定
"typeorm": "typeorm-ts-node-commonjs"
"typeorm": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js"

■ .eslintrc.jsにprettier/prettierの改行ルールを追加
これをしないとエラーがでる

  rules: {
    'prettier/prettier': [
      'error',
      {
        endOfLine: 'auto',
      },
    ],
  },



■ ライブラリ説明
helmet: セキュリティ、脆弱性対策？
cors: CORSの利用と思われる
rimraf: 出力ディレクトリを毎回削除
eslint: コードフォーマット
prettier eslint-config-prettier: バグ検出

